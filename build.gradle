buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        name 'luck-repo'
        url 'https://repo.lucko.me/'
    }
}

version = "1.0"
group = "com.yourname.modid" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "forge-replication"

configurations {
    bundle {}
    compile.extendsFrom bundle
    classpath {}
    compile.extendsFrom classpath
}

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.0.2512"
    runDir = "run"
    mappings = "snapshot_20171003"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
    compile 'me.lucko.luckperms:luckperms-api:3.3'
    bundle 'redis.clients:jedis:2.9.0'                                // Redis API
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    def bundled = configurations.bundle.collect { it.isDirectory() ? it : zipTree(it) }
    from(bundled) {
        exclude {
            it.file.name == "plugin.yml" || it.file.name == "config.yml"
        }
    }
    manifest {
        attributes(
                "Class-Path": configurations.classpath.collect { it.getName() }.join(' '))
    }
}